<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="listas_8h" kind="file" language="C++">
    <compoundname>listas.h</compoundname>
    <includes refid="estrutura_8h" local="yes">estrutura.h</includes>
    <includedby refid="listas_8c" local="yes">listas.c</includedby>
    <includedby refid="logicaProg_8c" local="yes">logicaProg.c</includedby>
    <incdepgraph>
      <node id="53">
        <label>estrutura.h</label>
        <link refid="estrutura_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>listas.h</label>
        <link refid="listas_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="57">
        <label>logicaProg.c</label>
        <link refid="logicaProg_8c"/>
      </node>
      <node id="56">
        <label>listas.c</label>
        <link refid="listas_8c"/>
      </node>
      <node id="55">
        <label>listas.h</label>
        <link refid="listas_8h"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structnodo" prot="public">nodo</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="listas_8h_1a6821bafc3c88dfb2e433a095df9940c6" prot="public" static="no">
        <name>BUF_SIZE</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Definir BUF_SIZE para 1024 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="listas.h" line="10" column="9" bodyfile="listas.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="listas_8h_1ab74c40cea97ab9b24f68471bb1ded1a2" prot="public" static="no">
        <type>struct <ref refid="structnodo" kindref="compound">nodo</ref></type>
        <definition>typedef struct nodo  NODO</definition>
        <argsstring></argsstring>
        <name>NODO</name>
        <briefdescription>
<para>struct relativa à definição de uma lista. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="listas.h" line="21" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="listas_8h_1a4a71db9e6a8409399ca9a0b64efede0d" prot="public" static="no">
        <type>struct <ref refid="structnodo" kindref="compound">nodo</ref> *</type>
        <definition>typedef struct nodo
    * LISTA</definition>
        <argsstring></argsstring>
        <name>LISTA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>a lista </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="listas.h" line="25" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="listas_8h_1ae3b99323b6f8f35d80bb69ff1a27985e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="listas_8h_1a4a71db9e6a8409399ca9a0b64efede0d" kindref="member">LISTA</ref></type>
        <definition>LISTA criar_lista</definition>
        <argsstring>()</argsstring>
        <name>criar_lista</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>função que cria uma lista vazia. <simplesect kind="return"><para>lista vazia criada. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="listas.h" line="32" column="1" bodyfile="listas.c" bodystart="11" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="listas_8h_1a37ba5fc3cfddb6bc94d4b54b00bc696e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="listas_8h_1a4a71db9e6a8409399ca9a0b64efede0d" kindref="member">LISTA</ref></type>
        <definition>LISTA insere_cabeca</definition>
        <argsstring>(LISTA L, void *valor)</argsstring>
        <name>insere_cabeca</name>
        <param>
          <type><ref refid="listas_8h_1a4a71db9e6a8409399ca9a0b64efede0d" kindref="member">LISTA</ref></type>
          <declname>L</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>valor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que insere um valor na cabeça de uma lista. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>a lista. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>valor</parametername>
</parameternamelist>
<parameterdescription>
<para>o valor a inserir. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a nova lista com o valor na cabeça. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="listas.h" line="41" column="1" bodyfile="listas.c" bodystart="18" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="listas_8h_1abfcb205f3eb670157be0d1221021714b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* devolve_cabeca</definition>
        <argsstring>(LISTA L)</argsstring>
        <name>devolve_cabeca</name>
        <param>
          <type><ref refid="listas_8h_1a4a71db9e6a8409399ca9a0b64efede0d" kindref="member">LISTA</ref></type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que devolve a cabeça da lista. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>a lista. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a cabeça da lista. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="listas.h" line="50" column="1" bodyfile="listas.c" bodystart="25" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="listas_8h_1ad9380152361127432c55c1c6067e05ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="listas_8h_1a4a71db9e6a8409399ca9a0b64efede0d" kindref="member">LISTA</ref></type>
        <definition>LISTA proximo</definition>
        <argsstring>(LISTA L)</argsstring>
        <name>proximo</name>
        <param>
          <type><ref refid="listas_8h_1a4a71db9e6a8409399ca9a0b64efede0d" kindref="member">LISTA</ref></type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que devolve a cauda da lista. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>a lista. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a cauda da lista. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="listas.h" line="58" column="1" bodyfile="listas.c" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="listas_8h_1a9026a681a68322b5ec7f07137b864cbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="listas_8h_1a4a71db9e6a8409399ca9a0b64efede0d" kindref="member">LISTA</ref></type>
        <definition>LISTA remove_cabeca</definition>
        <argsstring>(LISTA L)</argsstring>
        <name>remove_cabeca</name>
        <param>
          <type><ref refid="listas_8h_1a4a71db9e6a8409399ca9a0b64efede0d" kindref="member">LISTA</ref></type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que remove a cabeça da lista (libertando o espaço ocupado) e devolve a cauda. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>a lista. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a cauda da lista. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="listas.h" line="66" column="1" bodyfile="listas.c" bodystart="33" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="listas_8h_1a4c10928f7acaa4e3de3760cea0dfd9c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lista_esta_vazia</definition>
        <argsstring>(LISTA L)</argsstring>
        <name>lista_esta_vazia</name>
        <param>
          <type><ref refid="listas_8h_1a4a71db9e6a8409399ca9a0b64efede0d" kindref="member">LISTA</ref></type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que devolve verdareiro se a lista é vazia. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>a lista. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 caso seja falso e 1 caso seja verdadeiro. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="listas.h" line="74" column="1" bodyfile="listas.c" bodystart="40" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="listas_8h_1a4cdf73c24db7fb174b1491d70ca06097" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int comprimentoLista</definition>
        <argsstring>(LISTA l)</argsstring>
        <name>comprimentoLista</name>
        <param>
          <type><ref refid="listas_8h_1a4a71db9e6a8409399ca9a0b64efede0d" kindref="member">LISTA</ref></type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que devolve o comprimento de uma lista. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>a lista. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>do comprimento da lista </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="listas.h" line="81" column="1" bodyfile="listas.c" bodystart="44" bodyend="51"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>funções relativas às listas ligadas. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="5"><highlight class="preprocessor">#ifndef<sp/>PROJETO_FINALIZADO_LISTAS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PROJETO_FINALIZADO_LISTAS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="listas_8h_1a6821bafc3c88dfb2e433a095df9940c6" refkind="member"><highlight class="preprocessor">#define<sp/>BUF_SIZE<sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="estrutura_8h" kindref="compound">estrutura.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="structnodo" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnodo" kindref="compound">nodo</ref><sp/>{</highlight></codeline>
<codeline lineno="18" refid="structnodo_1ab63adcdb83ea1fdcf4fa10f3cafc4a6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structnodo_1ab63adcdb83ea1fdcf4fa10f3cafc4a6a" kindref="member">valor</ref>;</highlight></codeline>
<codeline lineno="20" refid="structnodo_1aaaabdcb6641ddcdac8990402242b154a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnodo" kindref="compound">nodo</ref><sp/>*<ref refid="structnodo_1aaaabdcb6641ddcdac8990402242b154a" kindref="member">proximo</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}<sp/><ref refid="listas_8h_1ab74c40cea97ab9b24f68471bb1ded1a2" kindref="member">NODO</ref>,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="listas_8h_1a4a71db9e6a8409399ca9a0b64efede0d" kindref="member">LISTA</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">LISTA<sp/><ref refid="listas_8h_1ae3b99323b6f8f35d80bb69ff1a27985e" kindref="member">criar_lista</ref>();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">LISTA<sp/><ref refid="listas_8h_1a37ba5fc3cfddb6bc94d4b54b00bc696e" kindref="member">insere_cabeca</ref>(LISTA<sp/>L,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structnodo_1ab63adcdb83ea1fdcf4fa10f3cafc4a6a" kindref="member">valor</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="listas_8h_1abfcb205f3eb670157be0d1221021714b" kindref="member">devolve_cabeca</ref>(LISTA<sp/>L);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">LISTA<sp/><ref refid="structnodo_1aaaabdcb6641ddcdac8990402242b154a" kindref="member">proximo</ref>(LISTA<sp/>L);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">LISTA<sp/><ref refid="listas_8h_1a9026a681a68322b5ec7f07137b864cbd" kindref="member">remove_cabeca</ref>(LISTA<sp/>L);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="listas_8h_1a4c10928f7acaa4e3de3760cea0dfd9c0" kindref="member">lista_esta_vazia</ref>(LISTA<sp/>L);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="listas_8h_1a4cdf73c24db7fb174b1491d70ca06097" kindref="member">comprimentoLista</ref><sp/>(LISTA<sp/>l);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//PROJETO_FINALIZADO_LISTAS_H</highlight></codeline>
    </programlisting>
    <location file="listas.h"/>
  </compounddef>
</doxygen>
