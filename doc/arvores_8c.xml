<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="arvores_8c" kind="file" language="C++">
    <compoundname>arvores.c</compoundname>
    <includes refid="arvores_8h" local="yes">arvores.h</includes>
    <includes refid="logicaProg_8h" local="yes">logicaProg.h</includes>
    <includes refid="estrutura_8h" local="yes">estrutura.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <incdepgraph>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="2">
        <label>estrutura.h</label>
        <link refid="estrutura_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>logicaProg.h</label>
        <link refid="logicaProg_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="0">
        <label>arvores.c</label>
        <link refid="arvores_8c"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>arvores.h</label>
        <link refid="arvores_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="arvores_8c_1a3391d67b1624e9c3eb0d4f28783a10bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arvores_8h_1a0f732add4d8a47795385064c3e499c3c" kindref="member">TREE</ref></type>
        <definition>TREE criar_arvore</definition>
        <argsstring>(ESTADO *e, int linha, int coluna, int profundidade)</argsstring>
        <name>criar_arvore</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>linha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>coluna</declname>
        </param>
        <param>
          <type>int</type>
          <declname>profundidade</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que cria uma árvore com classificação nas ultimas folhas <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>estado </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>linha</parametername>
</parameternamelist>
<parameterdescription>
<para>para a coordenada a meter no valor da struct <ref refid="structnodoArv" kindref="compound">nodoArv</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coluna</parametername>
</parameternamelist>
<parameterdescription>
<para>para a coordenada a meter no valor da struct <ref refid="structnodoArv" kindref="compound">nodoArv</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>profundidade</parametername>
</parameternamelist>
<parameterdescription>
<para>da arvore </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>arvore </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="arvores.c" line="12" column="1" bodyfile="arvores.c" bodystart="12" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="arvores_8c_1af928f6fb1881e08d08f4aad08ff96552" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float min8</definition>
        <argsstring>(float *a, int n)</argsstring>
        <name>min8</name>
        <param>
          <type>float *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que dado um array de 8 elementos retorna o menor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>numero de elementos do array </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>menor elemento </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="arvores.c" line="69" column="1" bodyfile="arvores.c" bodystart="69" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="arvores_8c_1aa6d94df1b670171095f3d248c46bf348" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float max8</definition>
        <argsstring>(float *a, int n)</argsstring>
        <name>max8</name>
        <param>
          <type>float *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que dado um array de 8 elementos retorna o maior <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>numero de elementos do array </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>maior elemento </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="arvores.c" line="78" column="1" bodyfile="arvores.c" bodystart="78" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="arvores_8c_1ac0ba69df71c4cfdbf454e3e56d4db9a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void preencher_class</definition>
        <argsstring>(TREE arvore, int profundidade)</argsstring>
        <name>preencher_class</name>
        <param>
          <type><ref refid="arvores_8h_1a0f732add4d8a47795385064c3e499c3c" kindref="member">TREE</ref></type>
          <declname>arvore</declname>
        </param>
        <param>
          <type>int</type>
          <declname>profundidade</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que preenche o resto das classificações da arvore de acordo com a heurística min-max <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arvore</parametername>
</parameternamelist>
<parameterdescription>
<para>a arvore </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>profundidade</parametername>
</parameternamelist>
<parameterdescription>
<para>a profundidade </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="arvores.c" line="87" column="1" bodyfile="arvores.c" bodystart="87" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="arvores_8c_1a093a1c1f401a07aa880943f6f94f8ed2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_arvore</definition>
        <argsstring>(TREE arvore, int profundidade)</argsstring>
        <name>free_arvore</name>
        <param>
          <type><ref refid="arvores_8h_1a0f732add4d8a47795385064c3e499c3c" kindref="member">TREE</ref></type>
          <declname>arvore</declname>
        </param>
        <param>
          <type>int</type>
          <declname>profundidade</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que dá free à árvore <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arvore</parametername>
</parameternamelist>
<parameterdescription>
<para>a arvore </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>profundidade</parametername>
</parameternamelist>
<parameterdescription>
<para>a profundidade </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="arvores.c" line="175" column="1" bodyfile="arvores.c" bodystart="175" bodyend="188"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>conjunto de funções correspondentes às arvores </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arvores_8h" kindref="compound">arvores.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="logicaProg_8h" kindref="compound">logicaProg.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="estrutura_8h" kindref="compound">estrutura.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><ref refid="structnodoArv" kindref="compound">TREE</ref><sp/><ref refid="arvores_8c_1a3391d67b1624e9c3eb0d4f28783a10bf" kindref="member">criar_arvore</ref><sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linha,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coluna,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>profundidade){</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnodoArv" kindref="compound">TREE</ref><sp/>arvore<sp/>=<sp/>malloc<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnodoArv" kindref="compound">nodoArv</ref>));</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(profundidade<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>arvore<sp/>-&gt;<sp/>valor.linha<sp/>=<sp/>linha;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>arvore<sp/>-&gt;<sp/>valor.coluna<sp/>=<sp/>coluna;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>profundidade--;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnodoArv" kindref="compound">TREE</ref><sp/>ce,<sp/>cc,<sp/>cd,<sp/>dd,<sp/>ee,<sp/>be,<sp/>bb,<sp/>bd;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((linha<sp/>==<sp/>7<sp/>&amp;&amp;<sp/>coluna<sp/>==<sp/>7)<sp/>||<sp/>(linha<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>coluna<sp/>==<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ce<sp/>=<sp/>cc<sp/>=<sp/>cd<sp/>=<sp/>dd<sp/>=<sp/>ee<sp/>=<sp/>be<sp/>=<sp/>bb<sp/>=<sp/>bd<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="logicaProg_8c_1a98ea9d5e7cd2f3b959749909388b6536" kindref="member">jogada_valida_bot</ref><sp/>(e,<sp/>linha<sp/>+<sp/>1,<sp/>coluna<sp/>-<sp/>1)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ce<sp/>=<sp/><ref refid="arvores_8c_1a3391d67b1624e9c3eb0d4f28783a10bf" kindref="member">criar_arvore</ref><sp/>(e,<sp/>linha<sp/>+<sp/>1,<sp/>coluna<sp/>-<sp/>1,<sp/>profundidade);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ce<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="logicaProg_8c_1a98ea9d5e7cd2f3b959749909388b6536" kindref="member">jogada_valida_bot</ref><sp/>(e,<sp/>linha<sp/>+<sp/>1,<sp/>coluna)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cc<sp/>=<sp/><ref refid="arvores_8c_1a3391d67b1624e9c3eb0d4f28783a10bf" kindref="member">criar_arvore</ref><sp/>(e,<sp/>linha<sp/>+<sp/>1,<sp/>coluna,<sp/>profundidade);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cc<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="logicaProg_8c_1a98ea9d5e7cd2f3b959749909388b6536" kindref="member">jogada_valida_bot</ref><sp/>(e,<sp/>linha<sp/>+<sp/>1,<sp/>coluna<sp/>+<sp/>1)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cd<sp/>=<sp/><ref refid="arvores_8c_1a3391d67b1624e9c3eb0d4f28783a10bf" kindref="member">criar_arvore</ref><sp/>(e,<sp/>linha<sp/>+<sp/>1,<sp/>coluna<sp/>+<sp/>1,<sp/>profundidade);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cd<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="logicaProg_8c_1a98ea9d5e7cd2f3b959749909388b6536" kindref="member">jogada_valida_bot</ref><sp/>(e,<sp/>linha,<sp/>coluna<sp/>+<sp/>1)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dd<sp/>=<sp/><ref refid="arvores_8c_1a3391d67b1624e9c3eb0d4f28783a10bf" kindref="member">criar_arvore</ref><sp/>(e,<sp/>linha,<sp/>coluna<sp/>+<sp/>1,<sp/>profundidade);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dd<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="logicaProg_8c_1a98ea9d5e7cd2f3b959749909388b6536" kindref="member">jogada_valida_bot</ref><sp/>(e,<sp/>linha<sp/>-<sp/>1,<sp/>coluna<sp/>+<sp/>1)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd<sp/>=<sp/><ref refid="arvores_8c_1a3391d67b1624e9c3eb0d4f28783a10bf" kindref="member">criar_arvore</ref><sp/>(e,<sp/>linha<sp/>-<sp/>1,<sp/>coluna<sp/>+<sp/>1,<sp/>profundidade);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bd<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="logicaProg_8c_1a98ea9d5e7cd2f3b959749909388b6536" kindref="member">jogada_valida_bot</ref><sp/>(e,<sp/>linha<sp/>-<sp/>1,<sp/>coluna)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bb<sp/>=<sp/><ref refid="arvores_8c_1a3391d67b1624e9c3eb0d4f28783a10bf" kindref="member">criar_arvore</ref><sp/>(e,<sp/>linha<sp/>-<sp/>1,<sp/>coluna,<sp/>profundidade);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bb<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="logicaProg_8c_1a98ea9d5e7cd2f3b959749909388b6536" kindref="member">jogada_valida_bot</ref><sp/>(e,<sp/>linha<sp/>-<sp/>1,<sp/>coluna<sp/>-<sp/>1)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>=<sp/><ref refid="arvores_8c_1a3391d67b1624e9c3eb0d4f28783a10bf" kindref="member">criar_arvore</ref><sp/>(e,<sp/>linha<sp/>-<sp/>1,<sp/>coluna<sp/>-<sp/>1,<sp/>profundidade);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="logicaProg_8c_1a98ea9d5e7cd2f3b959749909388b6536" kindref="member">jogada_valida_bot</ref><sp/>(e,<sp/>linha,<sp/>coluna<sp/>-<sp/>1)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ee<sp/>=<sp/><ref refid="arvores_8c_1a3391d67b1624e9c3eb0d4f28783a10bf" kindref="member">criar_arvore</ref><sp/>(e,<sp/>linha,<sp/>coluna<sp/>-<sp/>1,<sp/>profundidade);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ee<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>arvore<sp/>-&gt;<sp/>CE<sp/>=<sp/>ce;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>arvore<sp/>-&gt;<sp/>CC<sp/>=<sp/>cc;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>arvore<sp/>-&gt;<sp/>CD<sp/>=<sp/>cd;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>arvore<sp/>-&gt;<sp/>DD<sp/>=<sp/>dd;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>arvore<sp/>-&gt;<sp/>BD<sp/>=<sp/>bd;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>arvore<sp/>-&gt;<sp/>BB<sp/>=<sp/>bb;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>arvore<sp/>-&gt;<sp/>BE<sp/>=<sp/>be;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>arvore<sp/>-&gt;<sp/>EE<sp/>=<sp/>ee;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ce<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>cc<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>cd<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>dd<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>ee<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>bd<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>be<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>bb<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arvore<sp/>-&gt;<sp/><ref refid="logicaProg_8c_1a2fca29ec18c122c0c7c334e39837f970" kindref="member">classificacao</ref><sp/>=<sp/><ref refid="logicaProg_8c_1a2fca29ec18c122c0c7c334e39837f970" kindref="member">classificacao</ref><sp/>(arvore<sp/>-&gt;<sp/>valor,<sp/>e);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arvore;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="arvores_8c_1af928f6fb1881e08d08f4aad08ff96552" kindref="member">min8</ref><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n){</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>menor<sp/>=<sp/>a[0];</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1<sp/>;<sp/>i<sp/>&lt;<sp/>n<sp/>;<sp/>i++){</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a[i]<sp/>&lt;<sp/>menor)<sp/>menor<sp/>=<sp/>a[i];</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>menor;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="arvores_8c_1aa6d94df1b670171095f3d248c46bf348" kindref="member">max8</ref><sp/><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n){</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>maior<sp/>=<sp/>a[0];</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1<sp/>;<sp/>i<sp/>&lt;<sp/>n<sp/>;<sp/>i++){</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a[i]<sp/>&gt;<sp/>maior)<sp/>maior<sp/>=<sp/>a[i];</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maior;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arvores_8c_1ac0ba69df71c4cfdbf454e3e56d4db9a2" kindref="member">preencher_class</ref><sp/>(<ref refid="structnodoArv" kindref="compound">TREE</ref><sp/>arvore,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>profundidade){</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(profundidade<sp/>&gt;<sp/>1){</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arr[8];</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arvore<sp/>-&gt;<sp/>CE<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arvores_8c_1ac0ba69df71c4cfdbf454e3e56d4db9a2" kindref="member">preencher_class</ref><sp/>(arvore<sp/>-&gt;<sp/>CE,<sp/>profundidade-1);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr[i++]<sp/>=<sp/>arvore<sp/>-&gt;<sp/>CE<sp/>-&gt;<sp/><ref refid="logicaProg_8c_1a2fca29ec18c122c0c7c334e39837f970" kindref="member">classificacao</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arvore<sp/>-&gt;<sp/>CC<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arvores_8c_1ac0ba69df71c4cfdbf454e3e56d4db9a2" kindref="member">preencher_class</ref><sp/>(arvore<sp/>-&gt;<sp/>CC,<sp/>profundidade-1);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr[i++]<sp/>=<sp/>arvore<sp/>-&gt;<sp/>CC<sp/>-&gt;<sp/><ref refid="logicaProg_8c_1a2fca29ec18c122c0c7c334e39837f970" kindref="member">classificacao</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arvore<sp/>-&gt;<sp/>CD<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arvores_8c_1ac0ba69df71c4cfdbf454e3e56d4db9a2" kindref="member">preencher_class</ref><sp/>(arvore<sp/>-&gt;<sp/>CD,<sp/>profundidade-1);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr[i++]<sp/>=<sp/>arvore<sp/>-&gt;<sp/>CD<sp/>-&gt;<sp/><ref refid="logicaProg_8c_1a2fca29ec18c122c0c7c334e39837f970" kindref="member">classificacao</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arvore<sp/>-&gt;EE<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arvores_8c_1ac0ba69df71c4cfdbf454e3e56d4db9a2" kindref="member">preencher_class</ref><sp/>(arvore<sp/>-&gt;<sp/>EE,<sp/>profundidade-1);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr[i++]<sp/>=<sp/>arvore<sp/>-&gt;<sp/>EE<sp/>-&gt;<sp/><ref refid="logicaProg_8c_1a2fca29ec18c122c0c7c334e39837f970" kindref="member">classificacao</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arvore<sp/>-&gt;<sp/>DD<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arvores_8c_1ac0ba69df71c4cfdbf454e3e56d4db9a2" kindref="member">preencher_class</ref><sp/>(arvore<sp/>-&gt;<sp/>DD,<sp/>profundidade-1);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr[i++]<sp/>=<sp/>arvore<sp/>-&gt;<sp/>DD<sp/>-&gt;<sp/><ref refid="logicaProg_8c_1a2fca29ec18c122c0c7c334e39837f970" kindref="member">classificacao</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arvore<sp/>-&gt;<sp/>BE<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arvores_8c_1ac0ba69df71c4cfdbf454e3e56d4db9a2" kindref="member">preencher_class</ref><sp/>(arvore<sp/>-&gt;<sp/>BE,<sp/>profundidade-1);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr[i++]<sp/>=<sp/>arvore<sp/>-&gt;<sp/>BE<sp/>-&gt;<sp/><ref refid="logicaProg_8c_1a2fca29ec18c122c0c7c334e39837f970" kindref="member">classificacao</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arvore<sp/>-&gt;<sp/>BB<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arvores_8c_1ac0ba69df71c4cfdbf454e3e56d4db9a2" kindref="member">preencher_class</ref><sp/>(arvore<sp/>-&gt;<sp/>BB,<sp/>profundidade-1);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr[i++]<sp/>=<sp/>arvore<sp/>-&gt;<sp/>BB<sp/>-&gt;<sp/><ref refid="logicaProg_8c_1a2fca29ec18c122c0c7c334e39837f970" kindref="member">classificacao</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arvore<sp/>-&gt;<sp/>BD<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="arvores_8c_1ac0ba69df71c4cfdbf454e3e56d4db9a2" kindref="member">preencher_class</ref><sp/>(arvore<sp/>-&gt;<sp/>BD,<sp/>profundidade-1);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr[i++]<sp/>=<sp/>arvore<sp/>-&gt;<sp/>BD<sp/>-&gt;<sp/><ref refid="logicaProg_8c_1a2fca29ec18c122c0c7c334e39837f970" kindref="member">classificacao</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(profundidade<sp/>%<sp/>2<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arvore<sp/>-&gt;<sp/><ref refid="logicaProg_8c_1a2fca29ec18c122c0c7c334e39837f970" kindref="member">classificacao</ref><sp/>=<sp/><ref refid="arvores_8c_1aa6d94df1b670171095f3d248c46bf348" kindref="member">max8</ref><sp/>(arr,n);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arvore<sp/>-&gt;<sp/><ref refid="logicaProg_8c_1a2fca29ec18c122c0c7c334e39837f970" kindref="member">classificacao</ref><sp/>=<sp/><ref refid="arvores_8c_1af928f6fb1881e08d08f4aad08ff96552" kindref="member">min8</ref><sp/>(arr,n);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>arr[8];</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arvore<sp/>-&gt;<sp/>CE<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr[i++]<sp/>=<sp/>arvore<sp/>-&gt;<sp/>CE<sp/>-&gt;<sp/><ref refid="logicaProg_8c_1a2fca29ec18c122c0c7c334e39837f970" kindref="member">classificacao</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arvore<sp/>-&gt;<sp/>CC<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr[i++]<sp/>=<sp/>arvore<sp/>-&gt;<sp/>CC<sp/>-&gt;<sp/><ref refid="logicaProg_8c_1a2fca29ec18c122c0c7c334e39837f970" kindref="member">classificacao</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arvore<sp/>-&gt;<sp/>CD<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr[i++]<sp/>=<sp/>arvore<sp/>-&gt;<sp/>CD<sp/>-&gt;<sp/><ref refid="logicaProg_8c_1a2fca29ec18c122c0c7c334e39837f970" kindref="member">classificacao</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arvore<sp/>-&gt;<sp/>EE<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr[i++]<sp/>=<sp/>arvore<sp/>-&gt;<sp/>EE<sp/>-&gt;<sp/><ref refid="logicaProg_8c_1a2fca29ec18c122c0c7c334e39837f970" kindref="member">classificacao</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arvore<sp/>-&gt;<sp/>DD<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr[i++]<sp/>=<sp/>arvore<sp/>-&gt;<sp/>DD<sp/>-&gt;<sp/><ref refid="logicaProg_8c_1a2fca29ec18c122c0c7c334e39837f970" kindref="member">classificacao</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arvore<sp/>-&gt;BE<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr[i++]<sp/>=<sp/>arvore<sp/>-&gt;<sp/>BE<sp/>-&gt;<sp/><ref refid="logicaProg_8c_1a2fca29ec18c122c0c7c334e39837f970" kindref="member">classificacao</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arvore<sp/>-&gt;<sp/>BB<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr[i++]<sp/>=<sp/>arvore<sp/>-&gt;<sp/>BB<sp/>-&gt;<sp/><ref refid="logicaProg_8c_1a2fca29ec18c122c0c7c334e39837f970" kindref="member">classificacao</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arvore<sp/>-&gt;<sp/>BD<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr[i++]<sp/>=<sp/>arvore<sp/>-&gt;<sp/>BD<sp/>-&gt;<sp/><ref refid="logicaProg_8c_1a2fca29ec18c122c0c7c334e39837f970" kindref="member">classificacao</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arvore<sp/>-&gt;<sp/><ref refid="logicaProg_8c_1a2fca29ec18c122c0c7c334e39837f970" kindref="member">classificacao</ref><sp/>=<sp/><ref refid="arvores_8c_1aa6d94df1b670171095f3d248c46bf348" kindref="member">max8</ref>(arr,n);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arvores_8c_1a093a1c1f401a07aa880943f6f94f8ed2" kindref="member">free_arvore</ref><sp/>(<ref refid="structnodoArv" kindref="compound">TREE</ref><sp/>arvore,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>profundidade)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(profundidade<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>profundidade--;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arvore<sp/>-&gt;<sp/>CE<sp/>!=<sp/>NULL)<sp/><ref refid="arvores_8c_1a093a1c1f401a07aa880943f6f94f8ed2" kindref="member">free_arvore</ref><sp/>(arvore<sp/>-&gt;<sp/>CE,profundidade);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arvore<sp/>-&gt;<sp/>CC<sp/>!=<sp/>NULL)<sp/><ref refid="arvores_8c_1a093a1c1f401a07aa880943f6f94f8ed2" kindref="member">free_arvore</ref><sp/>(arvore<sp/>-&gt;<sp/>CC,profundidade);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arvore<sp/>-&gt;<sp/>CD<sp/>!=<sp/>NULL)<sp/><ref refid="arvores_8c_1a093a1c1f401a07aa880943f6f94f8ed2" kindref="member">free_arvore</ref><sp/>(arvore<sp/>-&gt;<sp/>CD,profundidade);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arvore<sp/>-&gt;<sp/>DD<sp/>!=<sp/>NULL)<sp/><ref refid="arvores_8c_1a093a1c1f401a07aa880943f6f94f8ed2" kindref="member">free_arvore</ref><sp/>(arvore<sp/>-&gt;<sp/>DD,profundidade);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arvore<sp/>-&gt;<sp/>BD<sp/>!=<sp/>NULL)<sp/><ref refid="arvores_8c_1a093a1c1f401a07aa880943f6f94f8ed2" kindref="member">free_arvore</ref><sp/>(arvore<sp/>-&gt;<sp/>BD,profundidade);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arvore<sp/>-&gt;<sp/>BB<sp/>!=<sp/>NULL)<sp/><ref refid="arvores_8c_1a093a1c1f401a07aa880943f6f94f8ed2" kindref="member">free_arvore</ref><sp/>(arvore<sp/>-&gt;<sp/>BB,profundidade);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arvore<sp/>-&gt;<sp/>BE<sp/>!=<sp/>NULL)<sp/><ref refid="arvores_8c_1a093a1c1f401a07aa880943f6f94f8ed2" kindref="member">free_arvore</ref><sp/>(arvore<sp/>-&gt;<sp/>BE,profundidade);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arvore<sp/>-&gt;<sp/>EE<sp/>!=<sp/>NULL)<sp/><ref refid="arvores_8c_1a093a1c1f401a07aa880943f6f94f8ed2" kindref="member">free_arvore</ref><sp/>(arvore<sp/>-&gt;<sp/>EE,profundidade);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>free<sp/>(arvore);</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="arvores.c"/>
  </compounddef>
</doxygen>
